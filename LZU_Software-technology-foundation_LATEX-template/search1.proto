#pragma warning(disable:4996)
#include <stdio.h>
#include <stdlib.h>
#include <malloc.h>
#define NULL 0
typedef struct ListNode {
	int data;
	struct ListNode* next;
} NODE;
/* 用尾插法建立带头结点的单链表*/
NODE* CreateList(int n) {
	NODE* head, * p, * q;
	int num;
	int i = 1;
	head = (NODE*)malloc(sizeof(NODE));
	head->next = NULL;
	p = head;
	while (i <= n) {
		printf("please input data:\n");
		scanf("%d", &num);
		q = (NODE*)malloc(sizeof(NODE));
		q->data = num;
		p->next = q; p = q;
		i++;
	}
	p->next = NULL;
	return (head);
}
/* 输出链表*/
void PrintList(NODE* head) {
	NODE* p;
	p = head->next;
	printf("Linear List: ");
	while (p != NULL) { printf("%d ", p->data); p = p->next; }
	printf("\n");
}
/* 单链表查找节点*/
int FoundList(NODE* head, int x) {
	NODE* p;
	int pos = 1;
	p = head->next;
	while ((p != NULL) && (p->data != x)) { p = p->next; pos++; }
	if (p != NULL) return (pos); else return (0);
}
/* 插入新结点（第i 个位置上插入） */
void InsertList(NODE* head, int x, int i)
{
	NODE* p, * s;
	int j = 0;
	p = head;
	while ((p != NULL) && (j < i - 1))
	{
		p = p->next;
		j++;
	}
	if ((p == NULL) || (j > i - 1))
		printf("\nPostion Error\n");
	else
	{
		s = (NODE*)malloc(sizeof(NODE));
		s->data = x;
		s->next = NULL;
		s->next = p->next;
		p->next = s;
		PrintList(head);
	}
}
/* 删除第i 个结点*/
void DeleteList(NODE* head, int i)
{
	NODE* p, * s;
	int j = 0;
	p = head;
	while ((p->next != NULL) && (j < i - 1))
	{
		p = p->next;
		j++;
	}
	if ((p->next == NULL) || (j > i - 1))
		printf("\nPostion Error\n");
	else
	{
		s = p->next;
		p->next = s->next;
		free(s);
	}
	PrintList(head);
}
/* 求线性链表长度*/
int LengthList(NODE* head) {
	int n;
	NODE* p;
	n = 0; p = head->next;
	while (p != NULL) {
		p = p->next;
		n++;
	}
	return (n);
}
void main() {
	NODE* head;
	int i, x, l, n;
	printf("Enter node number for creating: ");
	scanf("%d", &n); /* n=6*/
	head = CreateList(n);
	PrintList(head);
	printf("Enter data for found: ");
	scanf("%d", &x);
	i = FoundList(head, x);
	if (i == 0) printf("No found node!\n");
	else printf("Found node at position: %d\n", i);
	printf("Please input insert location\n");
	scanf("%d", &i);
	printf("Please input insert data\n");
	scanf("%d", &x);
	InsertList(head, x, i);
	printf("Please input delete location\n");
	scanf("%d", &i);
	DeleteList(head, i);
	l = LengthList(head);
	printf("length=%d\n", l);
}